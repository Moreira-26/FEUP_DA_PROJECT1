Pedido de transporte feito pelo fornecedor:
	-> Tipo de transporte Normal ou Expresso
	-> Peso
	-> Volume
	-> Recompensa

Transporte Normal:
	Carrinhas.txt -> VolMax, PesoMax, Custo

Transporte Expresso:
	-Uma viatura de capacidade unitária independentemente do volume ou peso.

	-Tempo estimado de entrega : tempo de realizar pedido (TempDest + TempRegresso)



Adição de estafetas(?):
	-> matricula, volMax, pesoMax, custo

----------------------------------------------

Otimização do numero de estafetas:
	Distribuir os pedidos de entregas normais para um dia entre os estafetas:

	Objetivo: MINIMIZAR numero de estafetas +
			  MAXIMIZAR numero de pedidos por estafeta

	Uma viagem por dia por estafeta.

	Realizar todos os pedidos ou minimizar estafetas prioridade?
-----------------------------------------------

Otimização do lucro da empresa:
	Selecionar os estafetas que irão MAXIMIZAR o lucro (Receita total dos pedidos - Custo dos estafetas).
	
	Se não houver capacidade de transporte ou despesas > receitas os pedidos que não poderem ser transportados são descartados.

ordenar carrinhas por menor custo
ordenar encomendas por maior lucro

-----------------------------------------------

Otimização das entregas expresso:
	Capacidade unitaria
	horario das 9:00 - 17:00
	MAXIMIZAR o numero de entregas expresso.
	MINIMIZAR o tempo médio dessas entregas.(NAO FAÇO A MINIMA IDEIA COMO)		
-----------------------------------------------

Classes:

Order:
	-> int id
	-> bool isExpresso
	-> int peso
	-> int vol
	-> int recompensa

Estafetas:
	-> int id
	-> int volMax
	-> int pesoMax
	-> int custo
	-> vector<Order>


-----------------------------------------------
Leitura de ficheiros:
	Ignorar primeira linha
	linha a linha retirar atributos separados por espaços

